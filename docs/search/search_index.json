{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction The Typesense Operator simplifies the management of Typesense on Kubernetes. It automates the entire process of deploying Typesense clusters, aiming to streamline operations and enhance efficiency. How to Get Involved This initiative is spearheaded by Saiprasanth in collaboration with our community members, and we welcome everyone to participate.Your involvement is crucial to the success of this project. Every contribution matters, from feedback to code contributions. License Typesense operator is licensed under the Apache License Join / Contribute Now Contribute Now Slack (coming soon)","title":"Introduction"},{"location":"#introduction","text":"The Typesense Operator simplifies the management of Typesense on Kubernetes. It automates the entire process of deploying Typesense clusters, aiming to streamline operations and enhance efficiency.","title":"Introduction"},{"location":"#how-to-get-involved","text":"This initiative is spearheaded by Saiprasanth in collaboration with our community members, and we welcome everyone to participate.Your involvement is crucial to the success of this project. Every contribution matters, from feedback to code contributions.","title":"How to Get Involved"},{"location":"#license","text":"Typesense operator is licensed under the Apache License","title":"License"},{"location":"#join-contribute-now","text":"Contribute Now Slack (coming soon)","title":"Join / Contribute Now"},{"location":"deployment/","text":"Quickstart: Typesense Operator Installation Requirements Typesense Operator v2.0 requires Kubernetes 1.20 or later. Works on self-managed and cloud managed clusters Installation Steps Set Up Kubernetes Cluster Use minikube or any other tool to create your Kubernetes cluster. Deploy Custom Resource Definition Navigate to the deployment directory cd deploy Deploy the Custom Resource Definition kubectl create -f crd.yaml Deploy RBAC (Role-Based Access Control) Deploy RBAC configuration: kubectl create -f rbac.yaml Deploy the Latest Operator Deploy the latest Typesense Operator: kubectl create -f operator.yaml Verify Operator Deployment Check if the operator pods are up and running: kubectl get pods Configure Operator Once the operator is running, configure it by referring to the configuration section below. Monitor Cluster Creation Monitor the creation of the Typesense cluster by checking pod statuses: kubectl get pods -n <namespace> Operator Configuration Sample configuration can be found in operator-config.yaml All the configuration must be specified under spec or config Supported configurations under spec replicas : Number of replicas of typesense. default : 3 NOTE : When the number of replicas are increased the operator automatically handles the peering connection between the replicas. namespace : Namespace to be used for deployment. default : typesense image : Typesense production ready docker image. List can be found here . default : latest tag will be pulled resources : Resources for cpu and memory. default resources: requests: memory: 100Mi cpu: \"64m\" limits: memory: 256Mi cpu: \"512m\" nodeSelector : Node to which pod has to be scheduled. if not specified, it picks up the node with available resources storageClass : Provides a way to administor the storage. Create a storage class with the provider of your choice and add it to the operator config. Options available are name and size name : Name of the storageClass that the operator should consider for volume mount. size : Size of the volume to be allocated to each typesense replica. NOTE : Supports all k8s Storageclass . startupProbe : Protect slow starting containers with startup probes Options available are failureThreshold and periodSeconds NOTE : k8s startupProbe . livenessProbe : Kubernetes provides liveness probes to detect and remedy such situations. Options available are failureThreshold and periodSeconds NOTE : k8s livenessProbe . Supported configurations under config password : Typesense authentication is done using a password. default : 297beb01dd21c NOTE : This will be moved to Kubernetes secrets in the upcoming versions! Deploying the configuration Create the operator kubectl create -f operator-config.yaml To apply any changes made to the config kubectl apply -f operator-config.yaml Upgrade Before performing this upgrade process, it is recommended to Test it out in a dev environment Backup the Typesense data The process of updating TKO is simple Watch for changes in the CRD file and apply those changes Watch for changes in the RBAC file and apply those changes Apply the new operator.yaml file Once the new operator pod is up and running, re-apply the configuration of the your operator so that the changes (if any) are reflected. kubectl apply -f <your operator config file yaml> Cleanup When you want to fully remove the cluster operator and associated definitions, you can run kubectl delete -f operator-config.yaml kubectl delete -f deploy/crd.yaml kubectl delete -f deploy/operator.yaml kubectl delete -f deploy/rbac.yaml","title":"Deployment"},{"location":"deployment/#quickstart-typesense-operator-installation","text":"","title":"Quickstart: Typesense Operator Installation"},{"location":"deployment/#requirements","text":"Typesense Operator v2.0 requires Kubernetes 1.20 or later. Works on self-managed and cloud managed clusters","title":"Requirements"},{"location":"deployment/#installation-steps","text":"Set Up Kubernetes Cluster Use minikube or any other tool to create your Kubernetes cluster. Deploy Custom Resource Definition Navigate to the deployment directory cd deploy Deploy the Custom Resource Definition kubectl create -f crd.yaml Deploy RBAC (Role-Based Access Control) Deploy RBAC configuration: kubectl create -f rbac.yaml Deploy the Latest Operator Deploy the latest Typesense Operator: kubectl create -f operator.yaml Verify Operator Deployment Check if the operator pods are up and running: kubectl get pods Configure Operator Once the operator is running, configure it by referring to the configuration section below. Monitor Cluster Creation Monitor the creation of the Typesense cluster by checking pod statuses: kubectl get pods -n <namespace>","title":"Installation Steps"},{"location":"deployment/#operator-configuration","text":"Sample configuration can be found in operator-config.yaml All the configuration must be specified under spec or config Supported configurations under spec replicas : Number of replicas of typesense. default : 3 NOTE : When the number of replicas are increased the operator automatically handles the peering connection between the replicas. namespace : Namespace to be used for deployment. default : typesense image : Typesense production ready docker image. List can be found here . default : latest tag will be pulled resources : Resources for cpu and memory. default resources: requests: memory: 100Mi cpu: \"64m\" limits: memory: 256Mi cpu: \"512m\" nodeSelector : Node to which pod has to be scheduled. if not specified, it picks up the node with available resources storageClass : Provides a way to administor the storage. Create a storage class with the provider of your choice and add it to the operator config. Options available are name and size name : Name of the storageClass that the operator should consider for volume mount. size : Size of the volume to be allocated to each typesense replica. NOTE : Supports all k8s Storageclass . startupProbe : Protect slow starting containers with startup probes Options available are failureThreshold and periodSeconds NOTE : k8s startupProbe . livenessProbe : Kubernetes provides liveness probes to detect and remedy such situations. Options available are failureThreshold and periodSeconds NOTE : k8s livenessProbe . Supported configurations under config password : Typesense authentication is done using a password. default : 297beb01dd21c NOTE : This will be moved to Kubernetes secrets in the upcoming versions! Deploying the configuration Create the operator kubectl create -f operator-config.yaml To apply any changes made to the config kubectl apply -f operator-config.yaml","title":"Operator Configuration"},{"location":"deployment/#upgrade","text":"Before performing this upgrade process, it is recommended to Test it out in a dev environment Backup the Typesense data The process of updating TKO is simple Watch for changes in the CRD file and apply those changes Watch for changes in the RBAC file and apply those changes Apply the new operator.yaml file Once the new operator pod is up and running, re-apply the configuration of the your operator so that the changes (if any) are reflected. kubectl apply -f <your operator config file yaml>","title":"Upgrade"},{"location":"deployment/#cleanup","text":"When you want to fully remove the cluster operator and associated definitions, you can run kubectl delete -f operator-config.yaml kubectl delete -f deploy/crd.yaml kubectl delete -f deploy/operator.yaml kubectl delete -f deploy/rbac.yaml","title":"Cleanup"},{"location":"about/community/","text":"Getting help If you encounter any issues while using the operator, you can get help by Raise a Github issue Slack / Discord (coming soon) Contributing You can contribute by Opening Pull Requests Improving documentation","title":"Community"},{"location":"about/community/#getting-help","text":"If you encounter any issues while using the operator, you can get help by Raise a Github issue Slack / Discord (coming soon)","title":"Getting help"},{"location":"about/community/#contributing","text":"You can contribute by Opening Pull Requests Improving documentation","title":"Contributing"},{"location":"about/release-notes/","text":"Release Notes Maintenance team saiprasanth Version 2.0 (2024-03-17) (Stable) Docker Image: 2.0 For more information refer to Release Notes What's New Start up probe from operator config important Operator will now not delete the entire namespace. Version 1.3 (2023-12-08) Docker Image: 1.3 For more information refer to Release Notes What's New Statefulset does not support publishNotReadyAddresses option Version 1.2 (2023-11-01) Docker Image: 1.2 For more information refer to Release Notes What's New Updating the Typesense image version from custom operator-config.yaml The publishNotReadyAddresses=True is set to support headless services discovery in stateful sets Introducing liveness and startup probes. Base files updated to pull Typesense version 0.25.0 Version 1.1 (2023-07-16) Docker Image: 1.1 For more information refer to Release Notes What's New Added support for StorageClass Bug fixes Configmap creation fixed Exceptions are not bypassed. If any exceptions are raised, the operator does not create resources further. Version 1.0 (2023-06-02) Initial public release Docker Image: 1.0 For more information refer to Release Notes","title":"Release Notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#maintenance-team","text":"saiprasanth","title":"Maintenance team"},{"location":"about/release-notes/#version-20-2024-03-17-stable","text":"Docker Image: 2.0 For more information refer to Release Notes","title":"Version 2.0 (2024-03-17) (Stable)"},{"location":"about/release-notes/#whats-new","text":"Start up probe from operator config important Operator will now not delete the entire namespace.","title":"What's New"},{"location":"about/release-notes/#version-13-2023-12-08","text":"Docker Image: 1.3 For more information refer to Release Notes","title":"Version 1.3 (2023-12-08)"},{"location":"about/release-notes/#whats-new_1","text":"Statefulset does not support publishNotReadyAddresses option","title":"What's New"},{"location":"about/release-notes/#version-12-2023-11-01","text":"Docker Image: 1.2 For more information refer to Release Notes","title":"Version 1.2 (2023-11-01)"},{"location":"about/release-notes/#whats-new_2","text":"Updating the Typesense image version from custom operator-config.yaml The publishNotReadyAddresses=True is set to support headless services discovery in stateful sets Introducing liveness and startup probes. Base files updated to pull Typesense version 0.25.0","title":"What's New"},{"location":"about/release-notes/#version-11-2023-07-16","text":"Docker Image: 1.1 For more information refer to Release Notes","title":"Version 1.1 (2023-07-16)"},{"location":"about/release-notes/#whats-new_3","text":"Added support for StorageClass","title":"What's New"},{"location":"about/release-notes/#bug-fixes","text":"Configmap creation fixed Exceptions are not bypassed. If any exceptions are raised, the operator does not create resources further.","title":"Bug fixes"},{"location":"about/release-notes/#version-10-2023-06-02","text":"Initial public release Docker Image: 1.0 For more information refer to Release Notes","title":"Version 1.0 (2023-06-02)"}]}